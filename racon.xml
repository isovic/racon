<tool id="racon" name="Racon" version="@VERSION@">
    <description>Consensus module for raw de novo DNA assembly of long uncorrected reads.</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <version_command>racon --version</version_command>
    <command detect_errors="exit_code"><![CDATA[
        ln -s '$reads' reads.${reads.ext} && 
        #if $overlaps.ext == 'sam':
            ln -s '$overlaps' overlaps.${overlaps.ext} && 
        #else:
            ln -s '$overlaps' overlaps.paf &&
        #end if
        ln -s '$corrected_reads' corrected_reads.${corrected_reads.ext} && 

	    #if $__galaxy_gpu_enabled__ == "true":
            racon_gpu
	    #else
            racon_cpu
	    #end if
 
        reads.${reads.ext}
        #if $overlaps.ext == 'sam':
            overlaps.${overlaps.ext}
        #else:
            overlaps.paf
        #end if
        corrected_reads.${corrected_reads.ext}
        $u
        $f
        -w $w
        -q $q
        -e $e
        -m $m
        -x $x
        -g $g
	    -t $t
	#if $__galaxy_gpu_enabled__ == "true":
	    -c $gpu_options.c
	    $gpu_options.b
	#end if
        > racon_polished_consensus.fa  
        

        #if $__galaxy_gpu_enabled__ == "true": 
            echo "1&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&"
        #else:
            echo "\$GALAXY_SLOTS"
        #end if    

        #if $__galaxy_gpu_enabled__ == "true": 
            echo "1&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&"
        #else:
            echo "\$GALAXY_GPU_ENABLED"
        #end if    

    ]]></command>
    <inputs>
        <param type="data" name="reads" format="fasta,fasta.gz,fastq,fastq.gz" label="Sequences"/>
        <param type="data" name="overlaps" format="sam,tabular" label="Overlaps"/>
        <param type="data" name="corrected_reads" format="fasta,fasta.gz,fastq,fastq.gz" label="Target sequences"/>
	
        <param argument="-u" type="boolean" truevalue="-u" falsevalue="" label="output unpolished target sequences" />
        <param argument="-f" type="boolean" truevalue="-f" falsevalue="" label="perform fragment correction instead of contig polishing" />
        <param argument="-w" type="integer" value="500" label="Size of window on which POA is performed" />
        <param argument="-q" type="float" value="10.0" label="Threshold for average base quality of windows used in poa" />
        <param argument="-e" type="float" value="0.3" label="Maximum allowed error rate used for filtering overlaps" />
        <param argument="-m" type="integer" value="5" label="Score for matching bases" />
        <param argument="-x" type="integer" value="-4" label="Score for mismatching bases" />
        <param argument="-g" type="integer" value="-8" max="0" label="Gap penalty" />        
        <param argument="-t" type="integer" value="1" label="Number of Threads" />
        <param name="gpu_support" type="hidden" value="true" />
	<conditional name="gpu_options" value_from="self:app.datatypes_registry.get_gpu_val" value_ref="gpu_support" value_ref_in_group="False" />
    </inputs>
    <outputs>
        <data name="consensus" format="fasta" from_work_dir="racon_polished_consensus.fa" />
    </outputs>
    <tests>
        <test>
            <param name="reads" ftype="fasta" value="sample_reads.fasta"/>
            <param name="overlaps" ftype="sam" value="sample_overlaps.sam"/>
            <param name="corrected_reads" ftype="fasta" value="sample_layout.fasta"/>
            <param name="u" value="true"/>
            <param name="f" value="true"/>
            <param name="w" value="800"/>
            <param name="e" value="0.2"/>
            <output name="consensus" ftype="fasta" file="consensus_result2.fasta"/>
        </test>
        <test>
            <param name="reads" ftype="fasta" value="sample_reads.fasta"/>
            <param name="overlaps" ftype="interval" value="sample_overlaps.paf"/>
            <param name="corrected_reads" ftype="fasta" value="sample_layout.fasta"/>
            <output name="consensus" ftype="fasta" file="consensus_result3.fasta"/>
        </test>
    </tests>
    <help><![CDATA[

**What it does**

Consensus module for raw de novo DNA assembly of long uncorrected reads.

Racon is intended as a standalone consensus module to correct raw contigs generated by rapid assembly methods
which do not include a consensus step. The goal of Racon is to generate genomic consensus which is of similar
or better quality compared to the output generated by assembly methods which employ both error correction
and consensus steps, while providing a speedup of several times compared to those methods.
It supports data produced by both Pacific Biosciences and Oxford Nanopore Technologies.

Racon can be used as a polishing tool after the assembly with either Illumina data or data
produced by third generation of sequencing. The type of data inputed is automatically detected.

Racon takes as input only three files: contigs in FASTA/FASTQ format, reads in FASTA/FASTQ
format and overlaps/alignments between the reads and the contigs in SAM format. Output is a set of polished contigs in FASTA format printed to stdout.

Racon can also be used as a read error-correction tool. In this scenario, the SAM file needs
to contain pairwise overlaps between reads including dual overlaps.

    ]]></help>
    <expand macro="citations" />
</tool>
